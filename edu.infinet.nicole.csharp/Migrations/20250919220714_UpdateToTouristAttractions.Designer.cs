// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using edu.infinet.nicole.csharp.Data;

#nullable disable

namespace edu.infinet.nicole.csharp.Migrations
{
    [DbContext(typeof(CityBreaksContext))]
    [Migration("20250919220714_UpdateToTouristAttractions")]
    partial class UpdateToTouristAttractions
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.9");

            modelBuilder.Entity("edu.infinet.nicole.csharp.Models.City", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CountryId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("CityName");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CountryId = 1,
                            Name = "Rio de Janeiro"
                        },
                        new
                        {
                            Id = 2,
                            CountryId = 1,
                            Name = "São Paulo"
                        },
                        new
                        {
                            Id = 3,
                            CountryId = 2,
                            Name = "Buenos Aires"
                        },
                        new
                        {
                            Id = 4,
                            CountryId = 2,
                            Name = "Mendoza"
                        },
                        new
                        {
                            Id = 5,
                            CountryId = 3,
                            Name = "Paris"
                        },
                        new
                        {
                            Id = 6,
                            CountryId = 3,
                            Name = "Nice"
                        },
                        new
                        {
                            Id = 7,
                            CountryId = 4,
                            Name = "Barcelona"
                        },
                        new
                        {
                            Id = 8,
                            CountryId = 4,
                            Name = "Sevilha"
                        },
                        new
                        {
                            Id = 9,
                            CountryId = 5,
                            Name = "Roma"
                        },
                        new
                        {
                            Id = 10,
                            CountryId = 5,
                            Name = "Florença"
                        },
                        new
                        {
                            Id = 11,
                            CountryId = 6,
                            Name = "Lisboa"
                        },
                        new
                        {
                            Id = 12,
                            CountryId = 6,
                            Name = "Porto"
                        },
                        new
                        {
                            Id = 13,
                            CountryId = 7,
                            Name = "Nova York"
                        },
                        new
                        {
                            Id = 14,
                            CountryId = 7,
                            Name = "Miami"
                        },
                        new
                        {
                            Id = 15,
                            CountryId = 8,
                            Name = "Toronto"
                        },
                        new
                        {
                            Id = 16,
                            CountryId = 8,
                            Name = "Vancouver"
                        },
                        new
                        {
                            Id = 17,
                            CountryId = 9,
                            Name = "Cancún"
                        },
                        new
                        {
                            Id = 18,
                            CountryId = 9,
                            Name = "Playa del Carmen"
                        },
                        new
                        {
                            Id = 19,
                            CountryId = 10,
                            Name = "Santiago"
                        },
                        new
                        {
                            Id = 20,
                            CountryId = 10,
                            Name = "Valparaíso"
                        });
                });

            modelBuilder.Entity("edu.infinet.nicole.csharp.Models.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Capital")
                        .HasColumnType("TEXT");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT")
                        .HasColumnName("CountryName");

                    b.Property<long>("Population")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Countries");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Capital = "Brasília",
                            Code = "BR",
                            Name = "Brasil",
                            Population = 215000000L
                        },
                        new
                        {
                            Id = 2,
                            Capital = "Buenos Aires",
                            Code = "AR",
                            Name = "Argentina",
                            Population = 45000000L
                        },
                        new
                        {
                            Id = 3,
                            Capital = "Paris",
                            Code = "FR",
                            Name = "França",
                            Population = 68000000L
                        },
                        new
                        {
                            Id = 4,
                            Capital = "Madrid",
                            Code = "ES",
                            Name = "Espanha",
                            Population = 47000000L
                        },
                        new
                        {
                            Id = 5,
                            Capital = "Roma",
                            Code = "IT",
                            Name = "Itália",
                            Population = 60000000L
                        },
                        new
                        {
                            Id = 6,
                            Capital = "Lisboa",
                            Code = "PT",
                            Name = "Portugal",
                            Population = 10000000L
                        },
                        new
                        {
                            Id = 7,
                            Capital = "Washington",
                            Code = "US",
                            Name = "Estados Unidos",
                            Population = 331000000L
                        },
                        new
                        {
                            Id = 8,
                            Capital = "Ottawa",
                            Code = "CA",
                            Name = "Canadá",
                            Population = 38000000L
                        },
                        new
                        {
                            Id = 9,
                            Capital = "Cidade do México",
                            Code = "MX",
                            Name = "México",
                            Population = 128000000L
                        },
                        new
                        {
                            Id = 10,
                            Capital = "Santiago",
                            Code = "CL",
                            Name = "Chile",
                            Population = 19000000L
                        });
                });

            modelBuilder.Entity("edu.infinet.nicole.csharp.Models.Property", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CityId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT")
                        .HasColumnName("PropertyName");

                    b.Property<decimal>("PricePerNight")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CityId");

                    b.ToTable("Properties");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CityId = 1,
                            Name = "Pão de Açúcar",
                            PricePerNight = 280.00m
                        },
                        new
                        {
                            Id = 2,
                            CityId = 1,
                            Name = "Cristo Redentor",
                            PricePerNight = 180.00m
                        },
                        new
                        {
                            Id = 3,
                            CityId = 2,
                            Name = "MASP",
                            PricePerNight = 220.00m
                        },
                        new
                        {
                            Id = 4,
                            CityId = 3,
                            Name = "Caminito",
                            PricePerNight = 150.00m
                        },
                        new
                        {
                            Id = 5,
                            CityId = 4,
                            Name = "Aconcágua",
                            PricePerNight = 120.00m
                        },
                        new
                        {
                            Id = 6,
                            CityId = 5,
                            Name = "Torre Eiffel",
                            PricePerNight = 450.00m
                        },
                        new
                        {
                            Id = 7,
                            CityId = 6,
                            Name = "Promenade des Anglais",
                            PricePerNight = 320.00m
                        },
                        new
                        {
                            Id = 8,
                            CityId = 7,
                            Name = "Sagrada Família",
                            PricePerNight = 290.00m
                        },
                        new
                        {
                            Id = 9,
                            CityId = 8,
                            Name = "Alcázar de Sevilha",
                            PricePerNight = 160.00m
                        },
                        new
                        {
                            Id = 10,
                            CityId = 9,
                            Name = "Coliseu",
                            PricePerNight = 380.00m
                        },
                        new
                        {
                            Id = 11,
                            CityId = 10,
                            Name = "Ponte Vecchio",
                            PricePerNight = 340.00m
                        },
                        new
                        {
                            Id = 12,
                            CityId = 11,
                            Name = "Torre de Belém",
                            PricePerNight = 140.00m
                        },
                        new
                        {
                            Id = 13,
                            CityId = 12,
                            Name = "Livraria Lello",
                            PricePerNight = 110.00m
                        },
                        new
                        {
                            Id = 14,
                            CityId = 13,
                            Name = "Estátua da Liberdade",
                            PricePerNight = 520.00m
                        },
                        new
                        {
                            Id = 15,
                            CityId = 14,
                            Name = "South Beach",
                            PricePerNight = 380.00m
                        },
                        new
                        {
                            Id = 16,
                            CityId = 15,
                            Name = "CN Tower",
                            PricePerNight = 240.00m
                        },
                        new
                        {
                            Id = 17,
                            CityId = 16,
                            Name = "Stanley Park",
                            PricePerNight = 200.00m
                        },
                        new
                        {
                            Id = 18,
                            CityId = 17,
                            Name = "Chichen Itzá",
                            PricePerNight = 350.00m
                        },
                        new
                        {
                            Id = 19,
                            CityId = 18,
                            Name = "Cenotes",
                            PricePerNight = 280.00m
                        },
                        new
                        {
                            Id = 20,
                            CityId = 19,
                            Name = "Cerro San Cristóbal",
                            PricePerNight = 160.00m
                        },
                        new
                        {
                            Id = 21,
                            CityId = 20,
                            Name = "Casa Pablo Neruda",
                            PricePerNight = 130.00m
                        });
                });

            modelBuilder.Entity("edu.infinet.nicole.csharp.Models.City", b =>
                {
                    b.HasOne("edu.infinet.nicole.csharp.Models.Country", "Country")
                        .WithMany("Cities")
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Country");
                });

            modelBuilder.Entity("edu.infinet.nicole.csharp.Models.Property", b =>
                {
                    b.HasOne("edu.infinet.nicole.csharp.Models.City", "City")
                        .WithMany("Properties")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("City");
                });

            modelBuilder.Entity("edu.infinet.nicole.csharp.Models.City", b =>
                {
                    b.Navigation("Properties");
                });

            modelBuilder.Entity("edu.infinet.nicole.csharp.Models.Country", b =>
                {
                    b.Navigation("Cities");
                });
#pragma warning restore 612, 618
        }
    }
}
